version: 2.1

description: |
  Build Rails apps

executors:
  default:
    description: Uses the circleci ruby image and the postgres docker image
    parameters:
      ruby-version:
        type: string
      postgres-version:
        type: string
      pg-user:
        type: string
      pg-db:
        type: string

    docker:
      - image: circleci/ruby:<< parameters.ruby-version >>-node
        environment:
          RAILS_ENV: test
          RACK_ENV: test
          PGHOST: localhost
          PGUSER: << parameters.pg-user >>
      - image: postgres:<< parameters.postgres-version >>
        environment:
          POSTGRES_USER: << parameters.pg-user >>
          POSTGRES_DB: << parameters.pg-db >>

commands:
  build-app:
    parameters:
      test-command:
        type: string
      pg-db:
        type: string
      build-assets:
        type: boolean
    steps:
      - run: npm install
      - run: sudo gem update --system
      - run: gem install bundler

      - restore_cache:
          key: rails-{{ checksum "Gemfile.lock" }}

      - run: bundle install --path vendor/bundle --jobs=4 --retry=3

      - save_cache:
          key: rails-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - when:
          condition: << parameters.pg-db >>
          steps:
            - run: bundle exec rake db:setup

      - when:
          condition: << parameters.build-assets >>
          steps:
            - run: RAILS_ENV=test bundle exec rake assets:precompile
            - persist_to_workspace:
                root: .
                paths:
                  - public

      - run: << parameters.test-command >>

jobs:
  build:
    description: Builds a Rails app
    parameters:
      ruby-version:
        default: "latest"
        description: Ruby version to use
        type: string
      postgres-version:
        default: "9.6"
        description: Postgres version to use
        type: string
      pg-user:
        type: string
        default: "pguser"
      pg-db:
        type: string
        default: ''
      test-command:
        type: string
        default: bundle exec ./bin/test
      build-assets:
        default: false
        description: whether we want the assets to be built
        type: boolean
    executor:
      name: default
      ruby-version: << parameters.ruby-version >>
      postgres-version: << parameters.postgres-version >>
      pg-user: << parameters.pg-user >>
      pg-db: << parameters.pg-db >>
    steps:
      - checkout
      - build-app:
          test-command: << parameters.test-command >>
          pg-db: << parameters.pg-db >>
          build-assets: << parameters.build-assets >>
